name: Lint and Test
on:
    push:
        branches:
          - main
        tags:
          - '*'
    pull_request:
        branches:
          - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Test
        run: go tool gotestsum -- -coverprofile=coverage.out ./...
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage.out
          path: coverage.out

  test-race:
    name: Test (race)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Test
        run: go tool gotestsum -- -race ./...

  test-coverage:
    permissions:
      contents: write
      pull-requests: write
    needs: test
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download Coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage.out
          path: .
      - name: Commit Coverage
        if: github.ref == 'refs/heads/main'
        uses: planetscale/ghcommit-action@7c35caed9937939812c7d4242ffab823e9b3b1fa # v0.2.16
        with:
          commit_message: "ðŸ¤– Update coverage.out"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Check Test Coverage
        uses: vladopajic/go-test-coverage@d4177aaab9307eb783516275d495c01254da2fb9 # v2.16.0
        id: coverage
        continue-on-error: true
        with:
          config: ./.testcoverage.yml
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: thollander/actions-comment-pull-request@24bffb9b452ba05a4f3f77933840a6a841d1b32b # v3.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: coverage-report
          message: |
            go-test-coverage report:
            ```
            ${{ fromJSON(steps.coverage.outputs.report) }}```
      - name: Validate Test Coverage
        if: steps.coverage.outcome == 'failure'
        run: exit 1
