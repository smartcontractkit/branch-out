name: Lint and Test
on:
    push:
        branches:
          - main
        tags:
          - '*'
    pull_request:
        branches:
          - main

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: latest

  test:
    name: ${{ matrix.race && 'Test (race)' || 'Test' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        race: [false, true]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Dependencies
        run: go mod download
      - name: Build Run Command
        id: build-run-command
        run: |
          run_command="go tool gotestsum -- -coverprofile=./cover.out ./..."
          if [ "$race" = "true" ]; then
            run_command="$run_command -race"
          fi
          echo "run_command=$run_command" >> $GITHUB_OUTPUT
          echo "coverage_file=./cover.out" >> $GITHUB_OUTPUT
      - name: Test
        run: ${{ steps.build-run-command.outputs.run_command }}
      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage.out
          path: ./cover.out

  check-coverage:
    needs: test
    name: Check Test Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check Test Coverage
        uses: vladopajic/go-test-coverage@v2
        with:
          config: ./.testcoverage.yml

  update-coverage:
    permissions:
      contents: write
    needs: test
    name: Update Coverage
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Download Coverage
        uses: actions/download-artifact@v4
        with:
          name: coverage.out
          path: ./coverage.out
      - uses: planetscale/ghcommit-action@v0.1.6
        with:
          commit_message: "ðŸ¤– Update coverage.out"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
