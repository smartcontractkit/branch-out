// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	jira "github.com/smartcontractkit/branch-out/jira"
	mock "github.com/stretchr/testify/mock"
)

// MockTrunkClient is an autogenerated mock type for the IClient type
type MockTrunkClient struct {
	mock.Mock
}

// LinkTicketToTestCase provides a mock function with given fields: testCaseID, ticket, repoURL
func (_m *MockTrunkClient) LinkTicketToTestCase(testCaseID string, ticket *jira.TicketResponse, repoURL string) error {
	ret := _m.Called(testCaseID, ticket, repoURL)

	if len(ret) == 0 {
		panic("no return value specified for LinkTicketToTestCase")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, *jira.TicketResponse, string) error); ok {
		r0 = rf(testCaseID, ticket, repoURL)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockTrunkClient creates a new instance of MockTrunkClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTrunkClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTrunkClient {
	mock := &MockTrunkClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
